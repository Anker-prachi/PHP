name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main  # Adjust the branch as needed
  workflow_dispatch:

env:
  PROJECT_ID: ankercloud-testing-account
  REGION: us-central1
  APP_NAME: php-app
  REGISTRY_NAME: gen-ai-poc
  SERVICE_ACCOUNT_EMAIL: 263666966446-compute@developer.gserviceaccount.com

jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Authenticate with Google Cloud
      - id: "auth"
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      # Configure Docker to use gcloud as a credential helper
      - name: Configure Docker authentication
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }} .

      # Push the Docker image to Artifact Registry
      - name: Push Docker Image to Artifact Registry
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}

      # Deploy the Docker image to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.APP_NAME }} \
            --service-account ${{ env.SERVICE_ACCOUNT_EMAIL }} \
            --allow-unauthenticated \
            --memory 1024Mi \
            --platform managed \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }} \
            --timeout 30 \
            --min-instances 0 \
            --max-instances 1 \
            --ingress all \
            --region ${{ env.REGION }} \
            --quiet
