name: Build and Deploy to Google Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Define environment variables for your deployment
env:
  PROJECT_ID: ankercloud-testing-account
  REGION: us-central1
  APP_NAME: my-dev-app
  REGISTRY_NAME: gen-ai-poc
  SERVICE_NAME: my-dev-app  # Define the Cloud Run service name
  GAR_LOCATION: us-central1  # Location of the Google Artifact Registry
  SERVICE_ACCOUNT_EMAIL: 263666966446-compute@developer.gserviceaccount.com

jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Authenticate with Google Cloud using a service account key stored in GitHub secrets
      - id: auth
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      # Authorize Docker to push to Google Artifact Registry
      - name: Authorize Docker push
        run: gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      # Build and tag the Docker image
      - name: Build and tag the Docker image
        run: |
          docker build . \
            --tag ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}

      # Push the image to the Google Artifact Registry (GAR)
      - name: Push the image to the Google Artifact Registry (GAR)
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }}

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --service-account ${{ env.SERVICE_ACCOUNT_EMAIL }}
